// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store{
  id String @id  @default(uuid()) @map("_id") 
  name String
  userId String 
  createdAt  DateTime @default(now())
  updatedAt DateTime @default(now()) 
  billboards Billboard[] @relation("StoreToBillboard")
  categories Category[] @relation("StoreToCategory")
  sizes Size[] @relation("StoreToSize")
  colors Color[] @relation("StoreToColor")
}
model Billboard {
  id String @id @default(uuid()) @map("_id")
  storeId String  
  poster String
  label String
  createdAt  DateTime @default(now())
  updatedAt DateTime @default(now())

  categories Category[] @relation("BillboardToCategory")
  store Store @relation("StoreToBillboard",fields: [storeId],references: [id],onDelete:Cascade)
  @@index([storeId]) 
}
model Category{
   id String @id @default(uuid()) @map("_id")
   storeId String  
   billboardId String
   name String
   createdAt  DateTime @default(now())
   updatedAt DateTime @default(now())
   store Store @relation("StoreToCategory",fields: [storeId],references: [id],onDelete:Cascade)
   billboard Billboard @relation("BillboardToCategory",fields: [billboardId],references: [id],onDelete:Cascade)
   @@index([storeId])
   @@index([billboardId])
}

model Size{
  id String @id @default(uuid()) @map("_id")
  storeId String
  store Store @relation("StoreToSize",fields: [storeId],references: [id],onDelete:Cascade)
  name String
  value String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  @@index([storeId])
}
model Color{
  id String @id @default(uuid()) @map("_id")
  storeId String
  store Store @relation("StoreToColor",fields: [storeId],references: [id],onDelete:Cascade)
  name String
  value String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  @@index([storeId])
}